import os
import telebot
from telebot import types
from datetime import datetime, timedelta

BOT_TOKEN = "6097745193:AAHC-Y2D8dGGmf0Z2_V6sLzkD2PSue8RECA"
bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=['start', 'hello'])
def send_welcome(message):
    bot.reply_to(message, "Hi! How can I help you today?")
    show_options(message.chat.id)

def show_options(chat_id):
    keyboard = types.ReplyKeyboardMarkup(row_width=2)
    button1 = types.KeyboardButton('Food')
    button2 = types.KeyboardButton('Transport')
    keyboard.add(button1, button2)

    bot.send_message(chat_id, 'Please select an option:', reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text in ['Food', 'Transport'])
def handle_option(message):
    option = message.text
    if option == 'Food':
        show_food_options(message.chat.id)
    elif option == 'Transport':
        show_transport_options(message.chat.id)

def show_food_options(chat_id):
    keyboard = types.ReplyKeyboardMarkup(row_width=1)
    button1 = types.KeyboardButton('Start an order')
    button2 = types.KeyboardButton('Join an order')
    keyboard.add(button1, button2)

    bot.send_message(chat_id, 'Food options:', reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text in ['Start an order', 'Join an order'])
def handle_food_option(message):
    option = message.text
    if option == 'Start an order':
        bot.send_message(message.chat.id, 'Send us your Group order link!')
        bot.register_next_step_handler(message, process_group_order_link)

def process_group_order_link(message):
    link = message.text
    # Process the group order link and register store name, delivery fee, duration
    # ...

    bot.send_message(message.chat.id, 'When do you want to close your group order?')
    show_closing_time_options(message.chat.id)

def show_closing_time_options(chat_id):
    # Get the current time
    now = datetime.now()

    # Calculate the starting hour for the intervals
    current_hour = now.hour
    if now.minute >= 45:
        current_hour = (current_hour + 1) % 24

    # Calculate the next four 15-minute intervals from the starting hour
    time_options = []
    for i in range(4):
        # Calculate the minutes for each 15-minute interval
        minutes = (i + 1) * 15
        # Calculate the closing time for each interval
        closing_time_datetime = now.replace(hour=current_hour, minute=minutes, second=0, microsecond=0)
        # Append the closing time to the options list
        time_options.append(closing_time_datetime)

    # Format the closing time options for display
    options_text = "\n".join([time.strftime('%I:%M %p') for time in time_options])

    # Send the closing time options as a message to the user
    bot.send_message(chat_id, "When do you want to close your group order?\n\n{}".format(options_text))

@bot.message_handler(func=lambda msg: True)
def echo_all(message):
    bot.reply_to(message, message.text)

bot.infinity_polling()
